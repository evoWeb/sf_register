<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
	<file source-language="en" datatype="plaintext" original="messages" date="2018-06-26T07:34:54Z" product-name="sf_register">
		<header/>
		<body>
			<trans-unit id="maximal.badWordList">
				<source>comma separated list of words used in bad word validator</source>
			</trans-unit>
			<trans-unit id="maximal.redirectPostRegistrationPageId">
				<source>Uid of the page to redirect to after the user is saved (not after confirmation)</source>
			</trans-unit>
			<trans-unit id="maximal.redirectPostActivationPageId">
				<source>Uid of the page to redirect to after the creation is confirmed (not after saving)</source>
			</trans-unit>
			<trans-unit id="maximal.useEmailAddressAsUsername">
				<source>Wether the email address should be used as username</source>
			</trans-unit>
			<trans-unit id="maximal.useEncryptedFilename">
				<source>Use encrypted filename: to deny direct access on uploaded files</source>
			</trans-unit>
			<trans-unit id="maximal.useEncryptedFilename.0">
				<source>plaintext no encrytion at all</source>
			</trans-unit>
			<trans-unit id="maximal.useEncryptedFilename.1">
				<source>md5-hash of password</source>
			</trans-unit>
			<trans-unit id="maximal.useEncryptedFilename.2">
				<source>sha1-hash of password</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostCreateSave">
				<source>the admin should get an email after saving on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostCreateSave">
				<source>the user should get an email after saving on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostCreateConfirm">
				<source>the admin should get an email after confirm on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostCreateConfirm">
				<source>the user should get an email after confirm on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostCreateRefuse">
				<source>the admin should get an email after refuse on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostCreateRefuse">
				<source>the user should get an email after refuse on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostCreateAccept">
				<source>the admin should get an email after accept on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostCreateAccept">
				<source>the user should get an email after accept on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostCreateDecline">
				<source>the admin should get an email after decline on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostCreateDecline">
				<source>the user should get an email after decline on creation</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostEditSave">
				<source>the admin should get an email after saving on edit</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostEditSave">
				<source>the user should get an email after saving on edit</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostEditConfirm">
				<source>the admin should get an email after confirm on edit</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostEditConfirm">
				<source>the user should get an email after confirm on edit</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostEditAccept">
				<source>the admin should get an email after accept on edit</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostEditAccept">
				<source>the user should get an email after accept on edit</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminSendInvitation">
				<source>the admin should get an email after an invitation got sent</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserSendInvitation">
				<source>the user should get an email after an invitation got sent</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostDeleteSave">
				<source>the admin should get an email after a delete request got sent</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostDeleteSave">
				<source>the user should get an email after a delete request got sent</source>
			</trans-unit>
			<trans-unit id="maximal.notifyAdminPostDeleteConfirm">
				<source>the admin should get an email after a delete request was confirmed</source>
			</trans-unit>
			<trans-unit id="maximal.notifyUserPostDeleteConfirm">
				<source>the user should get an email after an delete request was confirmed</source>
			</trans-unit>

			<trans-unit id="maximal.confirmEmailPostEdit">
				<source>user needs to confirm the email change</source>
			</trans-unit>
			<trans-unit id="maximal.acceptEmailPostEdit">
				<source>admin needs to accept the email change</source>
			</trans-unit>
			<trans-unit id="maximal.confirmEmailPostCreate">
				<source>user needs to confirm the email on create</source>
			</trans-unit>
			<trans-unit id="maximal.acceptEmailPostCreate">
				<source>admin needs to accept the email on create</source>
			</trans-unit>
			<trans-unit id="maximal.confirmEmailPostAccept">
				<source>user needs to confirm the email after the admin accepted</source>
			</trans-unit>
			<trans-unit id="maximal.acceptEmailPostConfirm">
				<source>admin needs to accept the email after the user confirmed</source>
			</trans-unit>

			<trans-unit id="maximal.autologinPostRegistration">
				<source>whether the user should get logged in after registration</source>
			</trans-unit>
			<trans-unit id="maximal.autologinPostConfirmation">
				<source>whether the user should get logged in after activation</source>
			</trans-unit>
			<trans-unit id="maximal.usergroupPostSave">
				<source>usergroup set if an account waits for activation</source>
			</trans-unit>
			<trans-unit id="maximal.usergroupPostConfirm">
				<source>usergroup set if the account was activate</source>
			</trans-unit>
			<trans-unit id="maximal.usergroupPostAccept">
				<source>usergroup set if the account was activate</source>
			</trans-unit>
			<trans-unit id="maximal.usergroup">
				<source>usergroup set if no activation is needed</source>
			</trans-unit>
			<trans-unit id="maximal.sitename">
				<source>Name of the site used in email subject</source>
			</trans-unit>
			<trans-unit id="maximal.userEmail.fromName">
				<source>from name used in email to user</source>
			</trans-unit>
			<trans-unit id="maximal.userEmail.fromEmail">
				<source>from email used in email to user</source>
			</trans-unit>
			<trans-unit id="maximal.userEmail.replyName">
				<source>reply name used in email to user</source>
			</trans-unit>
			<trans-unit id="maximal.userEmail.replyEmail">
				<source>reply email used in email to user</source>
			</trans-unit>
			<trans-unit id="maximal.adminEmail.toName">
				<source>to name used in email to admin</source>
			</trans-unit>
			<trans-unit id="maximal.adminEmail.toEmail">
				<source>to email used in email to admin</source>
			</trans-unit>
			<trans-unit id="maximal.adminEmail.fromName">
				<source>from name used in email to admin</source>
			</trans-unit>
			<trans-unit id="maximal.adminEmail.fromEmail">
				<source>from email used in email to admin</source>
			</trans-unit>
			<trans-unit id="maximal.adminEmail.replyName">
				<source>reply name used in email to admin</source>
			</trans-unit>
			<trans-unit id="maximal.adminEmail.replyEmail">
				<source>reply email used in email to admin</source>
			</trans-unit>
			<trans-unit id="maximal.storagePid">
				<source>Sysfolder that contains the usergroups and users if not set zero or a selected value in the plugin will be used for storing the user</source>
			</trans-unit>

			<trans-unit id="maximal.redirect.page">
				<source>Page to redirect to if create form is a different page then the edit form</source>
			</trans-unit>

			<trans-unit id="minimal.badWordList">
				<source>comma separated list of words used in bad word validator</source>
			</trans-unit>
			<trans-unit id="minimal.redirectPostActivationPageId">
				<source>Uid of the page to redirect to after the creation is confirmed (not after saving)</source>
			</trans-unit>
			<trans-unit id="minimal.autologinPostRegistration">
				<source>whether the user should get logged in after registration</source>
			</trans-unit>
			<trans-unit id="minimal.autologinPostConfirmation">
				<source>whether the user should get logged in after activation</source>
			</trans-unit>
			<trans-unit id="minimal.usergroupPostSave">
				<source>usergroup set if an account waits for activation</source>
			</trans-unit>
			<trans-unit id="minimal.usergroup">
				<source>usergroup set if no activation is needed</source>
			</trans-unit>
			<trans-unit id="minimal.emailSitename">
				<source>Name of the site used in email subject</source>
			</trans-unit>
			<trans-unit id="minimal.emailName">
				<source>Name used in every occurance of emails</source>
			</trans-unit>
			<trans-unit id="minimal.emailAddress">
				<source>Address used in every occurance of emails</source>
			</trans-unit>

			<trans-unit id="extmgm.typoscriptComplexity">
				<source>TypoScript complexity: wether to show minimal or maximal settings</source>
			</trans-unit>
			<trans-unit id="extmgm.typoscriptComplexity.0">
				<source>minimal</source>
			</trans-unit>
			<trans-unit id="extmgm.typoscriptComplexity.1">
				<source>maximal</source>
			</trans-unit>

			<trans-unit id="common.createPid">
				<source>Id of page with create form</source>
			</trans-unit>
			<trans-unit id="common.editPid">
				<source>Id of page with edit form</source>
			</trans-unit>
			<trans-unit id="common.passwordPid">
				<source>Id of page with password form</source>
			</trans-unit>
			<trans-unit id="common.invitePid">
				<source>Id of page with invite form</source>
			</trans-unit>
			<trans-unit id="common.captchaId">
				<source>Short name for the desired captcha extension: recaptcha, jmrecaptcha, srfreecap</source>
			</trans-unit>

			<trans-unit id="templateRootPath">
				<source>Path to template root (FE)</source>
			</trans-unit>
			<trans-unit id="partialRootPath">
				<source>Path to template partials (FE)</source>
			</trans-unit>
			<trans-unit id="layoutRootPath">
				<source>Path to template layouts (FE)</source>
			</trans-unit>
		</body>
	</file>
</xliff>
