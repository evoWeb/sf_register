{"version":3,"file":"sf_register.min.js.map","sources":["../../../Build/Public/Classes/PasswordStrengthCalculator.js","../../../Build/Public/Classes/SfRegister.js","../../../Build/Public/sf_register.js"],"sourcesContent":["export default class PasswordStrengthCalculator {\n    /**\n     * password length:\n     *   level 0 (0 point): less than 4 characters\n     *   level 1 (6 points): between 5 and 7 characters\n     *   level 2 (12 points): between 8 and 15 characters\n     *   level 3 (18 points): 16 or more characters\n     */\n    verdictLength(password) {\n        const length = password.length;\n        let score, log;\n        switch (true) {\n            case length > 0 && length < 5:\n                log = `3 points for length (${length})`;\n                score = 3;\n                break;\n            case length > 4 && length < 8:\n                log = `6 points for length (${length})`;\n                score = 6;\n                break;\n            case length > 7 && length < 16:\n                log = `12 points for length (${length})`;\n                score = 12;\n                break;\n            default:\n                log = `18 points for length (${length})`;\n                score = 18;\n                break;\n        }\n        return { score: score, log: log };\n    }\n    /**\n     * letters:\n     *   level 0 (0 points): no letters\n     *   level 1 (5 points): all letters are lower case\n     *   level 1 (5 points): all letters are upper case\n     *   level 2 (7 points): letters are mixed case\n     */\n    verdictLetter(password) {\n        const matchLower = password.match(/[a-z]/), matchUpper = password.match(/[A-Z]/);\n        let score = 0, log = '';\n        if (matchLower) {\n            if (matchUpper) {\n                score = 7;\n                log = '7 points for letters are mixed';\n            }\n            else {\n                score = 5;\n                log = '5 point for at least one lower case char';\n            }\n        }\n        else if (matchUpper) {\n            score = 5;\n            log = '5 points for at least one upper case char';\n        }\n        return { score: score, log: log };\n    }\n    /**\n     * numbers:\n     *   level 0 (0 points): no numbers exist\n     *   level 1 (5 points): one number exists\n     *   level 1 (7 points): 3 or more numbers exists\n     */\n    verdictNumbers(password) {\n        const numbers = password.replace(/\\D/gi, '');\n        let score = 0, log = '';\n        if (numbers.length > 1) {\n            score = 7;\n            log = '7 points for at least three numbers';\n        }\n        else if (numbers.length > 0) {\n            score = 5;\n            log = '5 points for at least one number';\n        }\n        return { score: score, log: log };\n    }\n    /**\n     * special characters:\n     *   level 0 (0 points): no special characters\n     *   level 1 (5 points): one special character exists\n     *   level 2 (10 points): more than one special character exists\n     */\n    verdictSpecialChars(password) {\n        const specialCharacters = password.replace(/[\\w\\s]/gi, '');\n        let score = 0, log = '';\n        if (specialCharacters.length > 1) {\n            score = 10;\n            log = '10 points for at least two special chars';\n        }\n        else if (specialCharacters.length > 0) {\n            score = 5;\n            log = '5 points for at least one special char';\n        }\n        return { score: score, log: log };\n    }\n    /**\n     * combinations:\n     *   level 0 (1 points): mixed case letters\n     *   level 0 (1 points): letters and numbers\n     *   level 1 (2 points): mixed case letters and numbers\n     *   level 3 (4 points): letters, numbers and special characters\n     *   level 4 (6 points): mixed case letters, numbers and special characters\n     */\n    verdictCombos(letter, number, special) {\n        let score = 0, log = '';\n        if (letter === 7 && number > 0 && special > 0) {\n            score = 6;\n            log = '6 combo points for letters, numbers and special characters';\n        }\n        else if (letter > 0 && number > 0 && special > 0) {\n            score = 4;\n            log = '4 combo points for letters, numbers and special characters';\n        }\n        else if (letter === 7 && number > 0) {\n            score = 2;\n            log = '2 combo points for mixed case letters and numbers';\n        }\n        else if (letter > 0 && number > 0) {\n            score = 1;\n            log = '1 combo points for letters and numbers';\n        }\n        else if (letter === 7) {\n            score = 1;\n            log = '1 combo points for mixed case letters';\n        }\n        return { score: score, log: log };\n    }\n    /**\n     * final verdict base on final score\n     */\n    finalVerdict(finalScore) {\n        let strVerdict;\n        if (finalScore < 16) {\n            strVerdict = 'very weak';\n        }\n        else if (finalScore > 15 && finalScore < 25) {\n            strVerdict = 'weak';\n        }\n        else if (finalScore > 24 && finalScore < 35) {\n            strVerdict = 'mediocre';\n        }\n        else if (finalScore > 34 && finalScore < 45) {\n            strVerdict = 'strong';\n        }\n        else {\n            strVerdict = 'stronger';\n        }\n        return strVerdict;\n    }\n    calculate(password) {\n        const lengthVerdict = this.verdictLength(password), letterVerdict = this.verdictLetter(password), numberVerdict = this.verdictNumbers(password), specialVerdict = this.verdictSpecialChars(password), combosVerdict = this.verdictCombos(letterVerdict.score, numberVerdict.score, specialVerdict.score);\n        const score = lengthVerdict.score\n            + letterVerdict.score\n            + numberVerdict.score\n            + specialVerdict.score\n            + combosVerdict.score, log = [\n            lengthVerdict.log,\n            letterVerdict.log,\n            numberVerdict.log,\n            specialVerdict.log,\n            combosVerdict.log,\n            score + ' points final score'\n        ].join('\\n');\n        return { score: score, log: log, verdict: this.finalVerdict(score) };\n    }\n}\n","import PasswordStrengthCalculator from './PasswordStrengthCalculator';\nconst document = window.document;\nexport default class SfRegister {\n    constructor() {\n        this.loading = false;\n        this.ajaxEndpoint = '/index.php?ajax=sf_register';\n        this.ajaxRequest = null;\n        this.passwordStrengthCalculator = null;\n        this.form = null;\n        this.barGraph = null;\n        this.zone = null;\n        this.zoneEmpty = null;\n        this.zoneLoading = null;\n        this.fileInformation = null;\n        this.removeImage = null;\n        if (document.readyState === 'loading') {\n            // Attach content loaded element with callback to document\n            document.addEventListener('DOMContentLoaded', () => this.initialize());\n        }\n        else {\n            this.initialize();\n        }\n    }\n    /**\n     * Callback after content was loaded\n     */\n    initialize() {\n        this.initializeElements();\n        this.initializePasswordStrengthCalculator();\n        this.initializeEvents();\n    }\n    initializeElements() {\n        this.form = document.getElementById('sfrForm');\n        this.zone = document.getElementById('sfrZone');\n        this.zoneEmpty = document.getElementById('sfrZone_empty');\n        this.zoneLoading = document.getElementById('sfrZone_loading');\n        this.barGraph = document.getElementById('bargraph');\n        this.fileInformation = document.getElementById('uploadFile');\n        this.removeImage = document.getElementById('removeImage');\n    }\n    initializePasswordStrengthCalculator() {\n        if (this.barGraph !== null) {\n            this.barGraph.classList.add('show');\n            this.passwordStrengthCalculator = new PasswordStrengthCalculator();\n        }\n    }\n    initializeEvents() {\n        this.attachToElementById('sfrCountry', 'change', (event) => this.countryChanged(event));\n        this.attachToElementById('sfrCountry', 'keyup', (event) => this.countryChanged(event));\n        this.attachToElementById('uploadButton', 'change', (event) => this.uploadFile(event));\n        this.attachToElementById('removeImageButton', 'click', () => this.removeFile());\n        this.attachToElementById('sfrPassword', 'keyup', (event) => this.checkPasswordOnChange(event));\n    }\n    /**\n     * Add class d-block remove class d-none\n     */\n    showElement(element) {\n        element.classList.remove('d-none');\n        element.classList.add('d-block');\n    }\n    /**\n     * Add class d-none remove class d-block\n     */\n    hideElement(element) {\n        element.classList.remove('d-block');\n        element.classList.add('d-none');\n    }\n    attachToElementById(id, eventName, callback) {\n        const element = document.getElementById(id);\n        if (element !== null) {\n            this.attachToElement(element, eventName, callback);\n        }\n    }\n    attachToElement(element, eventName, callback) {\n        if (element) {\n            element.addEventListener(eventName, callback);\n        }\n    }\n    /**\n     * Gets password meter element and sets the value with\n     * the result of the calculate password strength function\n     */\n    checkPasswordOnChange(event) {\n        const element = event.target, meterResult = this.passwordStrengthCalculator.calculate(element.value);\n        this.barGraph.value = meterResult.score;\n    }\n    loadCountryZonesByCountry(countrySelectedValue) {\n        if (this.zone !== null) {\n            this.loading = true;\n            this.zone.disabled = true;\n            this.hideElement(this.zoneEmpty);\n            this.showElement(this.zoneLoading);\n            this.ajaxRequest = new XMLHttpRequest();\n            this.ajaxRequest.onload = (event) => this.xhrReadyOnLoad(event);\n            this.ajaxRequest.open('POST', this.ajaxEndpoint);\n            this.ajaxRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n            this.ajaxRequest.send('tx_sfregister[action]=zones&tx_sfregister[parent]=' + countrySelectedValue);\n        }\n    }\n    /**\n     * Change value of zone select box\n     */\n    countryChanged(event) {\n        if (this.loading !== true\n            && ((event instanceof KeyboardEvent && (event.key === 'ArrowDown' || event.key === 'ArrowUp'))\n                || event.type === 'change')) {\n            if (this.zone) {\n                const target = event.target, countrySelectedValue = target.options[target.selectedIndex].value;\n                this.loadCountryZonesByCountry(countrySelectedValue);\n            }\n        }\n    }\n    /**\n     * Process ajax response and display error message or\n     * hand data received to add zone option function\n     */\n    xhrReadyOnLoad(stateChanged) {\n        const xhrResponse = stateChanged.target;\n        if (xhrResponse.readyState === 4 && xhrResponse.status === 200) {\n            const xhrResponseData = JSON.parse(xhrResponse.responseText);\n            this.hideElement(this.zoneLoading);\n            if (xhrResponseData.status === 'error' || xhrResponseData.data.length === 0) {\n                this.showElement(this.zoneEmpty);\n            }\n            else {\n                this.addZoneOptions(xhrResponseData.data);\n            }\n        }\n        this.loading = false;\n    }\n    /**\n     * Process data received with xhr response\n     */\n    addZoneOptions(options) {\n        while (this.zone.length) {\n            this.zone.removeChild(this.zone[0]);\n        }\n        options.forEach((option, index) => {\n            this.zone.options[index] = new Option(option.label, option.value);\n        });\n        this.zone.disabled = false;\n    }\n    /**\n     * Adds a preview information about file to upload in a label\n     */\n    uploadFile(event) {\n        const upload = event.target;\n        if (this.fileInformation !== null) {\n            this.fileInformation.value = upload.value;\n        }\n    }\n    /**\n     * Handle remove image button clicked\n     */\n    removeFile() {\n        if (this.removeImage !== null) {\n            this.removeImage.value = '1';\n            this.form.submit();\n        }\n    }\n}\n","import SfRegister from './Classes/SfRegister';\nnew SfRegister();\n"],"names":["PasswordStrengthCalculator","verdictLength","password","length","score","log","verdictLetter","matchLower","match","matchUpper","verdictNumbers","numbers","replace","verdictSpecialChars","specialCharacters","verdictCombos","letter","number","special","finalVerdict","finalScore","strVerdict","calculate","lengthVerdict","this","letterVerdict","numberVerdict","specialVerdict","combosVerdict","join","verdict","document","window","constructor","loading","ajaxEndpoint","ajaxRequest","passwordStrengthCalculator","form","barGraph","zone","zoneEmpty","zoneLoading","fileInformation","removeImage","readyState","addEventListener","initialize","initializeElements","initializePasswordStrengthCalculator","initializeEvents","getElementById","classList","add","attachToElementById","event","countryChanged","uploadFile","removeFile","checkPasswordOnChange","showElement","element","remove","hideElement","id","eventName","callback","attachToElement","target","meterResult","value","loadCountryZonesByCountry","countrySelectedValue","disabled","XMLHttpRequest","onload","xhrReadyOnLoad","open","setRequestHeader","send","KeyboardEvent","key","type","options","selectedIndex","stateChanged","xhrResponse","status","xhrResponseData","JSON","parse","responseText","data","addZoneOptions","removeChild","forEach","option","index","Option","label","upload","submit"],"mappings":"AAAe,MAAMA,EAQjB,aAAAC,CAAcC,GACV,MAAMC,EAASD,EAASC,OACxB,IAAIC,EAAOC,EACX,QAAQ,GACJ,KAAKF,EAAS,GAAKA,EAAS,EACxBE,EAAM,wBAAwBF,KAC9BC,EAAQ,EACR,MACJ,KAAKD,EAAS,GAAKA,EAAS,EACxBE,EAAM,wBAAwBF,KAC9BC,EAAQ,EACR,MACJ,KAAKD,EAAS,GAAKA,EAAS,GACxBE,EAAM,yBAAyBF,KAC/BC,EAAQ,GACR,MACJ,QACIC,EAAM,yBAAyBF,KAC/BC,EAAQ,GAGhB,MAAO,CAAEA,MAAOA,EAAOC,IAAKA,EAC/B,CAQD,aAAAC,CAAcJ,GACV,MAAMK,EAAaL,EAASM,MAAM,SAAUC,EAAaP,EAASM,MAAM,SACxE,IAAIJ,EAAQ,EAAGC,EAAM,GAerB,OAdIE,EACIE,GACAL,EAAQ,EACRC,EAAM,mCAGND,EAAQ,EACRC,EAAM,4CAGLI,IACLL,EAAQ,EACRC,EAAM,6CAEH,CAAED,MAAOA,EAAOC,IAAKA,EAC/B,CAOD,cAAAK,CAAeR,GACX,MAAMS,EAAUT,EAASU,QAAQ,OAAQ,IACzC,IAAIR,EAAQ,EAAGC,EAAM,GASrB,OARIM,EAAQR,OAAS,GACjBC,EAAQ,EACRC,EAAM,uCAEDM,EAAQR,OAAS,IACtBC,EAAQ,EACRC,EAAM,oCAEH,CAAED,MAAOA,EAAOC,IAAKA,EAC/B,CAOD,mBAAAQ,CAAoBX,GAChB,MAAMY,EAAoBZ,EAASU,QAAQ,WAAY,IACvD,IAAIR,EAAQ,EAAGC,EAAM,GASrB,OARIS,EAAkBX,OAAS,GAC3BC,EAAQ,GACRC,EAAM,4CAEDS,EAAkBX,OAAS,IAChCC,EAAQ,EACRC,EAAM,0CAEH,CAAED,MAAOA,EAAOC,IAAKA,EAC/B,CASD,aAAAU,CAAcC,EAAQC,EAAQC,GAC1B,IAAId,EAAQ,EAAGC,EAAM,GAqBrB,OApBe,IAAXW,GAAgBC,EAAS,GAAKC,EAAU,GACxCd,EAAQ,EACRC,EAAM,8DAEDW,EAAS,GAAKC,EAAS,GAAKC,EAAU,GAC3Cd,EAAQ,EACRC,EAAM,8DAEU,IAAXW,GAAgBC,EAAS,GAC9Bb,EAAQ,EACRC,EAAM,qDAEDW,EAAS,GAAKC,EAAS,GAC5Bb,EAAQ,EACRC,EAAM,0CAEU,IAAXW,IACLZ,EAAQ,EACRC,EAAM,yCAEH,CAAED,MAAOA,EAAOC,IAAKA,EAC/B,CAID,YAAAc,CAAaC,GACT,IAAIC,EAgBJ,OAdIA,EADAD,EAAa,GACA,YAERA,EAAa,IAAMA,EAAa,GACxB,OAERA,EAAa,IAAMA,EAAa,GACxB,WAERA,EAAa,IAAMA,EAAa,GACxB,SAGA,WAEVC,CACV,CACD,SAAAC,CAAUpB,GACN,MAAMqB,EAAgBC,KAAKvB,cAAcC,GAAWuB,EAAgBD,KAAKlB,cAAcJ,GAAWwB,EAAgBF,KAAKd,eAAeR,GAAWyB,EAAiBH,KAAKX,oBAAoBX,GAAW0B,EAAgBJ,KAAKT,cAAcU,EAAcrB,MAAOsB,EAActB,MAAOuB,EAAevB,OAC5RA,EAAQmB,EAAcnB,MACtBqB,EAAcrB,MACdsB,EAActB,MACduB,EAAevB,MACfwB,EAAcxB,MAQpB,MAAO,CAAEA,MAAOA,EAAOC,IARU,CAC7BkB,EAAclB,IACdoB,EAAcpB,IACdqB,EAAcrB,IACdsB,EAAetB,IACfuB,EAAcvB,IACdD,EAAQ,uBACVyB,KAAK,MAC0BC,QAASN,KAAKL,aAAaf,GAC/D,ECnKL,MAAM2B,EAAWC,OAAOD,SCAxB,IDCe,MACX,WAAAE,GACIT,KAAKU,SAAU,EACfV,KAAKW,aAAe,8BACpBX,KAAKY,YAAc,KACnBZ,KAAKa,2BAA6B,KAClCb,KAAKc,KAAO,KACZd,KAAKe,SAAW,KAChBf,KAAKgB,KAAO,KACZhB,KAAKiB,UAAY,KACjBjB,KAAKkB,YAAc,KACnBlB,KAAKmB,gBAAkB,KACvBnB,KAAKoB,YAAc,KACS,YAAxBb,EAASc,WAETd,EAASe,iBAAiB,oBAAoB,IAAMtB,KAAKuB,eAGzDvB,KAAKuB,YAEZ,CAID,UAAAA,GACIvB,KAAKwB,qBACLxB,KAAKyB,uCACLzB,KAAK0B,kBACR,CACD,kBAAAF,GACIxB,KAAKc,KAAOP,EAASoB,eAAe,WACpC3B,KAAKgB,KAAOT,EAASoB,eAAe,WACpC3B,KAAKiB,UAAYV,EAASoB,eAAe,iBACzC3B,KAAKkB,YAAcX,EAASoB,eAAe,mBAC3C3B,KAAKe,SAAWR,EAASoB,eAAe,YACxC3B,KAAKmB,gBAAkBZ,EAASoB,eAAe,cAC/C3B,KAAKoB,YAAcb,EAASoB,eAAe,cAC9C,CACD,oCAAAF,GAC0B,OAAlBzB,KAAKe,WACLf,KAAKe,SAASa,UAAUC,IAAI,QAC5B7B,KAAKa,2BAA6B,IAAIrC,EAE7C,CACD,gBAAAkD,GACI1B,KAAK8B,oBAAoB,aAAc,UAAWC,GAAU/B,KAAKgC,eAAeD,KAChF/B,KAAK8B,oBAAoB,aAAc,SAAUC,GAAU/B,KAAKgC,eAAeD,KAC/E/B,KAAK8B,oBAAoB,eAAgB,UAAWC,GAAU/B,KAAKiC,WAAWF,KAC9E/B,KAAK8B,oBAAoB,oBAAqB,SAAS,IAAM9B,KAAKkC,eAClElC,KAAK8B,oBAAoB,cAAe,SAAUC,GAAU/B,KAAKmC,sBAAsBJ,IAC1F,CAID,WAAAK,CAAYC,GACRA,EAAQT,UAAUU,OAAO,UACzBD,EAAQT,UAAUC,IAAI,UACzB,CAID,WAAAU,CAAYF,GACRA,EAAQT,UAAUU,OAAO,WACzBD,EAAQT,UAAUC,IAAI,SACzB,CACD,mBAAAC,CAAoBU,EAAIC,EAAWC,GAC/B,MAAML,EAAU9B,EAASoB,eAAea,GACxB,OAAZH,GACArC,KAAK2C,gBAAgBN,EAASI,EAAWC,EAEhD,CACD,eAAAC,CAAgBN,EAASI,EAAWC,GAC5BL,GACAA,EAAQf,iBAAiBmB,EAAWC,EAE3C,CAKD,qBAAAP,CAAsBJ,GAClB,MAAMM,EAAUN,EAAMa,OAAQC,EAAc7C,KAAKa,2BAA2Bf,UAAUuC,EAAQS,OAC9F9C,KAAKe,SAAS+B,MAAQD,EAAYjE,KACrC,CACD,yBAAAmE,CAA0BC,GACJ,OAAdhD,KAAKgB,OACLhB,KAAKU,SAAU,EACfV,KAAKgB,KAAKiC,UAAW,EACrBjD,KAAKuC,YAAYvC,KAAKiB,WACtBjB,KAAKoC,YAAYpC,KAAKkB,aACtBlB,KAAKY,YAAc,IAAIsC,eACvBlD,KAAKY,YAAYuC,OAAUpB,GAAU/B,KAAKoD,eAAerB,GACzD/B,KAAKY,YAAYyC,KAAK,OAAQrD,KAAKW,cACnCX,KAAKY,YAAY0C,iBAAiB,eAAgB,oDAClDtD,KAAKY,YAAY2C,KAAK,qDAAuDP,GAEpF,CAID,cAAAhB,CAAeD,GACX,IAAqB,IAAjB/B,KAAKU,UACAqB,aAAiByB,gBAAgC,cAAdzB,EAAM0B,KAAqC,YAAd1B,EAAM0B,MACrD,WAAf1B,EAAM2B,OACT1D,KAAKgB,KAAM,CACX,MAAM4B,EAASb,EAAMa,OAAQI,EAAuBJ,EAAOe,QAAQf,EAAOgB,eAAed,MACzF9C,KAAK+C,0BAA0BC,EAClC,CAER,CAKD,cAAAI,CAAeS,GACX,MAAMC,EAAcD,EAAajB,OACjC,GAA+B,IAA3BkB,EAAYzC,YAA2C,MAAvByC,EAAYC,OAAgB,CAC5D,MAAMC,EAAkBC,KAAKC,MAAMJ,EAAYK,cAC/CnE,KAAKuC,YAAYvC,KAAKkB,aACS,UAA3B8C,EAAgBD,QAAsD,IAAhCC,EAAgBI,KAAKzF,OAC3DqB,KAAKoC,YAAYpC,KAAKiB,WAGtBjB,KAAKqE,eAAeL,EAAgBI,KAE3C,CACDpE,KAAKU,SAAU,CAClB,CAID,cAAA2D,CAAeV,GACX,KAAO3D,KAAKgB,KAAKrC,QACbqB,KAAKgB,KAAKsD,YAAYtE,KAAKgB,KAAK,IAEpC2C,EAAQY,SAAQ,CAACC,EAAQC,KACrBzE,KAAKgB,KAAK2C,QAAQc,GAAS,IAAIC,OAAOF,EAAOG,MAAOH,EAAO1B,MAAM,IAErE9C,KAAKgB,KAAKiC,UAAW,CACxB,CAID,UAAAhB,CAAWF,GACP,MAAM6C,EAAS7C,EAAMa,OACQ,OAAzB5C,KAAKmB,kBACLnB,KAAKmB,gBAAgB2B,MAAQ8B,EAAO9B,MAE3C,CAID,UAAAZ,GAC6B,OAArBlC,KAAKoB,cACLpB,KAAKoB,YAAY0B,MAAQ,IACzB9C,KAAKc,KAAK+D,SAEjB"}